{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This AWS CloudFormation template assists in the provisioning of the AWS WAF bad behaving ip auto blocking stack without having to manually create all the components of this example. **WARNING** This template creates a Lambda Function, a AWS WAF Web ACL, a S3 Bucket and a CloudWatch Custom Metric. You will be billed for the AWS resources used if you create a stack from this template. **NOTICE** Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved. Licensed under the Amazon Software License (the 'License'). You may not use this file except in compliance with the License. A copy of the License is located at http://aws.amazon.com/asl/ or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions and limitations under the License",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "S3 Location"
          },
          "Parameters": [
            "CloudFrontCreateAccessLogBucket",
            "CloudFrontAccessLogBucket"
          ]
        },
        {
          "Label": {
            "default": "Bad Behaving Blacklisting Parameters"
          },
          "Parameters": [
            "RequestThreshold",
            "WAFBlockPeriod"
          ]
        }
      ],
      "ParameterLabels": {
        "CloudFrontCreateAccessLogBucket": {
          "default": "Create CloudFront Access Log Bucket"
        },
        "CloudFrontAccessLogBucket": {
          "default": "CloudFront Access Log Bucket Name"
        },
        "RequestThreshold": {
          "default": "Request Threshold"
        },
        "WAFBlockPeriod": {
          "default": "WAF Block Period"
        }
      }
    }
  },
  "Parameters": {
    "CloudFrontCreateAccessLogBucket": {
      "Type": "String",
      "Default": "yes",
      "AllowedValues": [
        "yes",
        "no"
      ],
      "Description": "Select Yes to create a new S3 bucket for CloudFront Access Logs. Select No if you already have an S3 bucket for CloudFront Access logs."
    },
    "CloudFrontAccessLogBucket": {
      "Type": "String",
      "Default": "",
      "Description": "Enter the name of a bucket where the CloudFront log files are to be stored. Rules for bucket naming: http://amzn.to/1QXbleZ"
    },
    "RequestThreshold": {
      "Type": "Number",
      "Default": "50",
      "Description": "Enter the maximum bad requests per minute, per IP. Default: 50"
    },
    "WAFBlockPeriod": {
      "Type": "Number",
      "Default": "240",
      "Description": "Enter duration (in minutes) the IP should be blocked for. Default: 4 hours (240 minutes)"
    }
  },
  "Conditions": {
    "CreateBucket": {
      "Fn::Equals": [
        {
          "Ref": "CloudFrontCreateAccessLogBucket"
        },
        "yes"
      ]
    }
  },
  "Resources": {
    "WAFManualBlockSet": {
      "Type": "AWS::WAF::IPSet",
      "Properties": {
        "Name": "Manual Block Set"
      }
    },
    "WAFAutoBlockSet": {
      "Type": "AWS::WAF::IPSet",
      "Properties": {
        "Name": "Auto Block Set"
      }
    },
    "WAFManualBlockRule": {
      "Type": "AWS::WAF::Rule",
      "DependsOn": "WAFManualBlockSet",
      "Properties": {
        "Name": "Manual Block Rule",
        "MetricName": "ManualBlockRule",
        "Predicates": [
          {
            "DataId": {
              "Ref": "WAFManualBlockSet"
            },
            "Negated": false,
            "Type": "IPMatch"
          }
        ]
      }
    },
    "WAFAutoBlockRule": {
      "Type": "AWS::WAF::Rule",
      "DependsOn": "WAFAutoBlockSet",
      "Properties": {
        "Name": "Auto Block Rule",
        "MetricName": "AutoBlockRule",
        "Predicates": [
          {
            "DataId": {
              "Ref": "WAFAutoBlockSet"
            },
            "Negated": false,
            "Type": "IPMatch"
          }
        ]
      }
    },
    "WAFWebACL": {
      "Type": "AWS::WAF::WebACL",
      "DependsOn": [
        "WAFManualBlockRule",
        "WAFAutoBlockRule"
      ],
      "Properties": {
        "Name": "Malicious Requesters",
        "DefaultAction": {
          "Type": "ALLOW"
        },
        "MetricName": "MaliciousRequesters",
        "Rules": [
          {
            "Action": {
              "Type": "BLOCK"
            },
            "Priority": 1,
            "RuleId": {
              "Ref": "WAFManualBlockRule"
            }
          },
          {
            "Action": {
              "Type": "BLOCK"
            },
            "Priority": 2,
            "RuleId": {
              "Ref": "WAFAutoBlockRule"
            }
          }
        ]
      }
    },
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "S3Access",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "s3:*",
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "WAFAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "waf:*",
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "LogsAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "logs:*",
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "LambdAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "lambda:*",
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "CloudFormationAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "cloudformation:DescribeStacks",
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "CloudWatchAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "cloudwatch:PutMetricData",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "LambdaWAFBlacklistingFunction": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": "LambdaRole",
      "Properties": {
        "Description": {
          "Fn::Join": [
            ":",
            [
              {
                "Ref": "RequestThreshold"
              },
              {
                "Ref": "WAFBlockPeriod"
              }
            ]
          ]
        },
        "Handler": "parser.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": "benjipotter-waf-oregon",
          "S3Key": "waf/parser.zip"
        },
        "Runtime": "python2.7",
        "MemorySize": "512",
        "Timeout": "300"
      }
    },
    "LambdaInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": "LambdaWAFBlacklistingFunction",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaWAFBlacklistingFunction",
            "Arn"
          ]
        },
        "Action": "lambda:*",
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      }
    },
    "S3CloudFrontAccessLogBucket": {
      "Type": "AWS::S3::Bucket",
      "Condition": "CreateBucket",
      "DependsOn": "LambdaWAFBlacklistingFunction",
      "Properties": {
        "BucketName": {
          "Ref": "CloudFrontAccessLogBucket"
        },
        "AccessControl": "Private",
        "NotificationConfiguration": {
          "LambdaConfigurations": [
            {
              "Event": "s3:ObjectCreated:*",
              "Filter": {
                "S3Key": {
                  "Rules": [
                    {
                      "Name": "suffix",
                      "Value": "gz"
                    }
                  ]
                }
              },
              "Function": {
                "Fn::GetAtt": [
                  "LambdaWAFBlacklistingFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      },
      "DeletionPolicy": "Retain"
    }
  },
  "Outputs": {
    "CloudFrontAccessLogBucket": {
      "Description": "CloudFront Access Log Bucket",
      "Value": {
        "Ref": "CloudFrontAccessLogBucket"
      }
    },
    "RequestThreshold": {
      "Description": "Request Threshold",
      "Value": {
        "Ref": "RequestThreshold"
      }
    },
    "WAFBlockPeriod": {
      "Description": "WAF Block Period",
      "Value": {
        "Ref": "WAFBlockPeriod"
      }
    },
    "ManualBlockIPSetID": {
      "Description": "Manual Block IP Set ID",
      "Value": {
        "Ref": "WAFManualBlockSet"
      }
    },
    "AutoBlockIPSetID": {
      "Description": "Auto Block IP Set ID",
      "Value": {
        "Ref": "WAFAutoBlockSet"
      }
    }
  }
}